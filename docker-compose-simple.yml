services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hotel-reservation-postgres
    environment:
      POSTGRES_DB: hotel_reservation
      POSTGRES_USER: hotel_user
      POSTGRES_PASSWORD: hotel_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotel_user -d hotel_reservation"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: hotel-reservation-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: hotel-reservation-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Hotel Service
  hotel-service:
    build:
      context: .
      dockerfile: hotel-service/Dockerfile
    container_name: hotel-reservation-hotel
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel_reservation
      SPRING_DATASOURCE_USERNAME: hotel_user
      SPRING_DATASOURCE_PASSWORD: hotel_password
    networks:
      - hotel-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Reservation Service
  reservation-service:
    build:
      context: .
      dockerfile: reservation-service/Dockerfile
    container_name: hotel-reservation-reservation
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel_reservation
      SPRING_DATASOURCE_USERNAME: hotel_user
      SPRING_DATASOURCE_PASSWORD: hotel_password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - hotel-network
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:

networks:
  hotel-network:
    driver: bridge 